spring.application.name=Main


gemini.api.key=AIzaSyB3sX2w8CiBw2Yq6s-Lbgd1_iWmpJ24a14
spring.ai.vertex.ai.gemini.project-id=${GEMINI_PROJECT_ID:gen-lang-client-0740077448}
spring.ai.vertex.ai.gemini.location=${GEMINI_LOCATION:us-central1}

server.port=8080

# SQL Server Database Configuration
spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=SBA301_TVLGT;encrypt=false;trustServerCertificate=true;
spring.datasource.username=sa
spring.datasource.password=12345
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

# JPA / Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServerDialect

# Connection pool settings
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.maximum-pool-size=10

# JWT Configuration
app.jwt.signer-key=68aQAui4ZFKfV6+rjqebxu2zKZA8+4kWp/dT3WZrTJzZMJygLK5vf3z2/BltMwY3
app.jwt.expiration-ms=3600000

#VNPay Configuration
vnpay.tmn-code=6DYQMPNG
vnpay.hash-secret=9ZTX1AXEL8UGW0MJPGP4KCAL7EH89MTZ
vnpay.url=https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
vnpay.return-url=http://localhost:3000/chatbot/pricing

# MoMo Config
# momo.partner-code=MOMO
# momo.access-key=F8BBA842ECF85
# momo.secret-key=K951B6PE1waDMi640xX08PD3vg6EkVlz
# momo.payment-url=https://test-payment.momo.vn/v2/gateway/api/create
# momo.return-url=http://localhost:3000/chatbot/pricing
# momo.ipn-url=https://abc123.ngrok.io/momo/ipn

momo.partner-code=MOMO
momo.access-key=F8BBA842ECF85
momo.secret-key=K951B6PE1waDMi640xX08PD3vg6EkVlz
momo.endpoint=https://test-payment.momo.vn/v2/gateway/api/create
momo.redirect-url=http://localhost:3000/chatbot/pricing/success
momo.ipn-url=https://strong-radios-fail.loca.lt/api/payment/ipn

management.endpoints.web.exposure.include=mappings

server.tomcat.max-http-post-size=25MB
server.tomcat.max-swallow-size=25MB

# Redis configuration
spring.redis.host=${REDIS_HOST:localhost}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.password=${REDIS_PASS:}
spring.redis.timeout=2000ms
spring.redis.database=0

# Redis Lettuce pool
spring.redis.lettuce.pool.max-active=8
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.min-idle=0
spring.redis.lettuce.pool.max-wait=-1ms

# Redis cache
spring.cache.type=redis
spring.cache.redis.time-to-live=300000

# Mail configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME:nguyentienthuan9595@gmail.com}
spring.mail.password=${MAIL_PASSWORD:rifsottspmrldtca}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# OAuth2 Google configuration
spring.security.oauth2.client.registration.google.client-id=${GG_CLIENT_ID:457138276546-eg9d037h6lapqqilfk9vbncke18ib4io.apps.googleusercontent.com}
spring.security.oauth2.client.registration.google.client-secret=${GG_CLIENT_SECRET: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}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo


